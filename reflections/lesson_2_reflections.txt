What happens when you initialize a repository?
A .git folder is created that holds metadata 

Why do you need to do it?
You need to do this if you want to create commits

How is the staging area different from the working directory and the repository?
The working directory contains all the files while the staging area contains the files that you want to be part of th commit.
What value do you think it offers?
Helps you to commit only the logical changes to the commit so to speak.

How can you use the staging area to make sure you have one commit per logical change?
By running the command gitt diff --staged and comparing the staging area to the previous commit in the repository, you can tell if the changes you have made are what you want to commit.
WHAT ARE SOME SITUATIONS WHEN BRANCHES WOULD BE HELPFUL IN KEEPING YOUR HISTORY ORGANIZED? HOW WOULD BRANCHES HELP?
Branches are helpful when you want to add an experimental feature that you may or may not put into the main app or you want to create another language version of the app this keeps the history clean because you can easily go back to the main branch if you want to go back to the app without the experimental feature. This causes your commit history to be clean and easy to navigate because you can label the branches and keep track of each "logical branch label"
How do the diagrams help you visualize the branch structure?
they make things easier to understand and recall

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
They become one
to show that they were initially independent branches

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
pros- speed
cons- when conflicts arise it takes some work to resolve them